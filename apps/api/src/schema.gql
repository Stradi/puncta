# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Domain {
  """Unique identifier for the domain"""
  id: ID!

  """Date the this object created"""
  createdAt: DateTime!

  """Date the this object last updated"""
  updatedAt: DateTime!

  """Name of the domain"""
  name: String!

  """University of the domain"""
  university: University!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type University {
  """Unique identifier for the university"""
  id: ID!

  """Date the this object created"""
  createdAt: DateTime!

  """Date the this object last updated"""
  updatedAt: DateTime!

  """Name of the university"""
  name: String!

  """Slug of the university"""
  slug: String!

  """Faculties of this university"""
  faculties(page: Int = 0, pageSize: Int = 10, filter: FacultyFilterInput, sort: FacultySortInput): [Faculty!]

  """Number of faculties of this university"""
  facultyCount: Int

  """Teachers of this university"""
  teachers(page: Int = 0, pageSize: Int = 10, filter: TeacherFilterInput, sort: TeacherSortInput): [Teacher!]

  """Number of teachers of this university"""
  teacherCount: Int

  """Ratings of this university"""
  ratings(page: Int = 0, pageSize: Int = 10, id: Int, sort: RatingSortInput): [Rating!]

  """Number of ratings of this university"""
  ratingCount: Int

  """Domain of this university"""
  domain: Domain!

  """Logo of this university"""
  image: String
}

input FacultyFilterInput {
  id: IntFilter
  name: StringFilter
  slug: StringFilter
  university: BaseResourceIdentifierFilter
}

input IntFilter {
  equals: Float
  in: Float
  notIn: Float
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: Float
}

input StringFilter {
  equals: String
  in: String
  notIn: String
  contains: String
  startsWith: String
  endsWith: String
  not: String
}

input BaseResourceIdentifierFilter {
  id: IntFilter
  name: StringFilter
  slug: StringFilter
}

input FacultySortInput {
  id: String
  createdAt: String
  updatedAt: String
  name: String
  slug: String
}

input TeacherFilterInput {
  id: IntFilter
  name: StringFilter
  slug: StringFilter
  university: BaseResourceIdentifierFilter
  faculty: BaseResourceIdentifierFilter
}

input TeacherSortInput {
  id: String
  createdAt: String
  updatedAt: String
  name: String
  slug: String
}

input RatingSortInput {
  id: String
  createdAt: String
  updatedAt: String
}

type Rating {
  """Unique identifier for rating"""
  id: ID!

  """Date the this object created"""
  createdAt: DateTime!

  """Date the this object last updated"""
  updatedAt: DateTime!

  """Message of this rating"""
  comment: String

  """Additional meta field for this rating"""
  meta: String

  """The university that this rating rates"""
  university: University

  """The university that this rating rates"""
  teacher: Teacher

  """The user that created this rating"""
  user: User
}

type Teacher {
  """Unique identifier for the teacher"""
  id: ID!

  """Date the this object created"""
  createdAt: DateTime!

  """Date the this object last updated"""
  updatedAt: DateTime!

  """Name of the faculty"""
  name: String!

  """Slug of the faculty"""
  slug: String!

  """The university that this teacher works"""
  university: University

  """The faculty that this teacher works"""
  faculty: Faculty

  """Ratings of this teacher"""
  ratings(page: Int = 0, pageSize: Int = 10, id: Int, sort: RatingSortInput): [Rating!]

  """Number of ratings of this teacher"""
  ratingCount: Int
}

type Faculty {
  """Unique identifier for the faculty"""
  id: ID!

  """Date the this object created"""
  createdAt: DateTime!

  """Date the this object last updated"""
  updatedAt: DateTime!

  """Name of the faculty"""
  name: String!

  """Slug of the faculty"""
  slug: String!

  """The universities that has this faculty"""
  universities(page: Int = 0, pageSize: Int = 10, filter: UniversityFilterInput, sort: UniversitySortInput): [University!]

  """Number of universities that has this faculty"""
  universityCount: Int

  """Teachers of this faculty"""
  teachers(page: Int = 0, pageSize: Int = 10, filter: TeacherFilterInput, sort: TeacherSortInput): [Teacher!]

  """Number of teachers of this faculty"""
  teacherCount: Int
}

input UniversityFilterInput {
  id: IntFilter
  name: StringFilter
  slug: StringFilter
}

input UniversitySortInput {
  id: String
  createdAt: String
  updatedAt: String
  name: String
  slug: String
}

type Response {
  """Unique identifier for the teacher"""
  id: ID!

  """Date the this object created"""
  createdAt: DateTime!

  """Date the this object last updated"""
  updatedAt: DateTime!

  """Content of the response"""
  content: String!

  """Additional meta field for this rating"""
  meta: String!

  """The ratingg that this response belongs to"""
  to: Rating!

  """The teacher that created this response"""
  from: User!
}

type User {
  """Unique identifier for the user"""
  id: ID!

  """Date the this object created"""
  createdAt: DateTime!

  """Date the this object last updated"""
  updatedAt: DateTime!

  """Role of this user"""
  role: String!

  """Email of this user"""
  email: String!

  """Username of this user"""
  username: String!

  """Rating that this user has made"""
  ratings: [Rating!]

  """Number of ratings that this user has made"""
  ratingCount: Int

  """University that this user is associated with"""
  university: University

  """Faculty that this user is associated with"""
  faculty: Faculty

  """Responses that this user has created"""
  responses: [Response!]

  """Number of responses that this user has created"""
  responseCount: Int

  """Teacher that this user is associated with"""
  teacher: Teacher

  """Whether this user (teacher) is verified or not"""
  isApproved: Boolean

  """Whether this user is anonymous or not"""
  isAnonymous: Boolean
  response: [Response!]!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

type IsExists {
  """Is exists"""
  result: Boolean!
}

type Query {
  university(page: Int = 0, pageSize: Int = 10, filter: UniversityFilterInput, sort: UniversitySortInput): [University!]!
  faculty(page: Int = 0, pageSize: Int = 10, filter: FacultyFilterInput, sort: FacultySortInput): [Faculty!]!
  teacher(page: Int = 0, pageSize: Int = 10, filter: TeacherFilterInput, sort: TeacherSortInput): [Teacher!]!
  rating(page: Int = 0, pageSize: Int = 10, id: Int, sort: RatingSortInput): [Rating!]!
  isEmailExists(email: String!): IsExists!
  isUsernameExists(username: String!): IsExists!
  user(username: String!): User!
  me: User!
  response(page: Int = 0, pageSize: Int = 10, id: Int): [Response!]!
}

type Mutation {
  createUniversity(name: String!, domain: String!): University!
  updateUniversity(filter: UpdateUniversityFilter!, set: UpdateUniversitySet!): University!
  deleteUniversity(
    """Unique identifier of the resource"""
    id: Int

    """Name of the resource"""
    name: String

    """Slug of the resource"""
    slug: String
  ): University!
  createFaculty(name: String!, university: ConnectFacultyUniversity!): Faculty!
  updateFaculty(filter: UpdateFacultyFilter!, set: UpdateFacultySet!): Faculty!
  deleteFaculty(
    """Unique identifier of the resource"""
    id: Int

    """Name of the resource"""
    name: String

    """Slug of the resource"""
    slug: String
  ): Faculty!
  createTeacher(name: String!, university: ConnectTeacherUniversity!, faculty: ConnectTeacherFaculty!): Teacher!
  updateTeacher(filter: UpdateTeacherFilter!, set: UpdateTeacherSet!): Teacher!
  deleteTeacher(
    """Unique identifier of the resource"""
    id: Int

    """Name of the resource"""
    name: String

    """Slug of the resource"""
    slug: String
  ): Teacher!
  createRating(comment: String, meta: String, university: ConnectRatingUniversity, teacher: ConnectRatingTeacher): Rating!
  updateRating(filter: UpdateRatingFilter!, set: UpdateRatingSet!): Rating!
  deleteRating(id: Int!): Rating!
  signup(email: String!, username: String!, password: String!, university: ConnectUserUniversity, faculty: ConnectUserFaculty, role: String, teacher: ConnectUserTeacher): Auth!
  login(username: String!, password: String!): Auth!
  refreshToken(token: JWT!): Token!
  changePassword(oldPassword: String!, newPassword: String!): User!
  changeAnonymity(anonymity: Boolean!): User!
  createResponse(content: String!, meta: String!, to: Int!): Response!
  updateResponse(filter: UpdateResponseFilter!, set: UpdateResponseSet!): Response!
  deleteResponse(id: Int!): Response!
}

input UpdateUniversityFilter {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input UpdateUniversitySet {
  name: String
  slug: String
  image: String
}

input ConnectFacultyUniversity {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input UpdateFacultyFilter {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input UpdateFacultySet {
  name: String
  slug: String
}

input ConnectTeacherUniversity {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input ConnectTeacherFaculty {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input UpdateTeacherFilter {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input UpdateTeacherSet {
  name: String
  slug: String
  university: UpdateTeacherSetUniversity
  faculty: UpdateTeacherSetFaculty
}

input UpdateTeacherSetUniversity {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input UpdateTeacherSetFaculty {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input ConnectRatingUniversity {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input ConnectRatingTeacher {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input UpdateRatingFilter {
  id: Int!
}

input UpdateRatingSet {
  comment: String
  meta: String
}

input ConnectUserUniversity {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input ConnectUserFaculty {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input ConnectUserTeacher {
  """Unique identifier of the resource"""
  id: Int

  """Name of the resource"""
  name: String

  """Slug of the resource"""
  slug: String
}

input UpdateResponseFilter {
  id: Int!
}

input UpdateResponseSet {
  content: String
  meta: String
}